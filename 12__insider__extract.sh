#!/usr/bin/env bash
# Copyright 2019-2024 VMware, Inc.
# SPDX-License-Identifier: Apache-2.0

##############################################################################################################
# Extract key results from the reports generated by ...
#   "INSIDER Static Application Security Testing" (SAST) - https://github.com/insidersec/insider & https://insidersec.io/
##############################################################################################################

# ----- Please adjust

# ------ Do not modify
VERSION=${INSIDER_VERSION}
STEP=$(get_step)
SEPARATOR=","
APP_BASE=${REPORTS_DIR}/${STEP}__INSIDER

function generate_csv() {
	APP_DIR_INCOMING=${1}
	GROUP=$(basename "${APP_DIR_INCOMING}")
	APP_DIR_OUT="${APP_BASE}__${GROUP}"
	RESULT_FILE="${APP_DIR_OUT}/${GROUP}___results_extracted.csv"

	if [[ ! -d "${APP_DIR_OUT}" ]]; then
		LOG_FILE=/dev/null
		log_console_error "INSIDER result directory does not exist: ${APP_DIR_OUT}"
		exit
	fi

	export LOG_FILE="${APP_BASE}.log"
	log_extract_message "group '${GROUP}'"

	rm -f "${RESULT_FILE}"
	echo "Applications${SEPARATOR}Insider SAST vulns" >>"${RESULT_FILE}"

	while read -r FILE; do
		APP="$(basename "${FILE}")"
		log_extract_message "app '${APP}'"
		JSON_IN="${APP_DIR_OUT}/${APP}_report.json"

		VULNS="n/a"
		if [ -f "${JSON_IN}" ]; then
			VULNS="0"
			COUNT_VULNS=$(jq ".total" "${JSON_IN}")
			[ -n "${COUNT_VULNS}" ] && VULNS=${COUNT_VULNS}
		fi
		echo "${APP}${SEPARATOR}${VULNS}" >>"${RESULT_FILE}"

	done <"${REPORTS_DIR}/list__${GROUP}__all_apps.txt"

	log_console_success "Results: ${RESULT_FILE}"
}

function main() {
	for_each_group generate_csv
}

main
